#Домашняя работа по уроку "Цикл for. Элементы списка. Полезные функции в цикле"
#Задача:
# Дан список чисел numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
# Используя этот список составьте второй список primes содержащий только простые числа.
# А так же третий список not_primes, содержащий все не простые числа.
# Выведите списки primes и not_primes на экран(в консоль).
# -------------------------Исходные данные--------------------------------------------
#numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
#--------------------------Порядок действий-------------------------------------------
# 1. Создайте пустые списки primes и not_primes.
# 2. При помощи цикла for переберите список numbers.
# 3. Напишите ещё один цикл for (вложенный), где будут подбираться делители для числа из 1ого цикла.
# 4. Отметить простоту числа можно переменной is_prime, записав в неё занчение True перед проверкой.
# 5. В процессе проверки на простоту записывайте числа из списка numbers в списки primes и not_primes
#    в зависимости от значения переменной is_prime после проверки (True - в prime, False - в not_prime).
# 6. Выведите списки primes и not_primes на экран(в консоль).
#-------------------------Решение-----------------------------------------------------------
#1. Создаю список numbers по исходным данным задачи
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
#2. Создаю пустые списки primes и not_primes.
#Список простых чисел
primes=list()
#Список составных чисел
not_primes=list()
#2. При помощи цикла for перебираю список numbers.
#   number - число в списке
for number in numbers:
    #Присваиваем флагу is_prime значение Истина
    is_prime = True
    #Если число number больше 1 (1 не относится ни к простым, ни к составным числам)
    if number > 1:
        #перебираем циклом числа от 2
        for i in range(2, number):
            ost=number % i
            # Если остаток от деления числа равен 0, число будет составным
            if ost == 0:
               #присваиваем is_prime значение Ложь
               is_prime = False
    # иначе если число равно 1
    else:
        #переход в начало цикла
        continue
    # Если is_prime равно True
    if is_prime == True:
        #добавляем в список простых чисел число
       primes.append(number)
    #Иначе, is_prime равно False, добавляем число в список составных чисел
    else:
       not_primes.append(number)
#Вывод на консоль
print(f'Простые числа:    {primes}')
print(f'Составные числа:  {not_primes}')